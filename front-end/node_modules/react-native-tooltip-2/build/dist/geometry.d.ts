import { RectType, GeometryType } from "./Tooltip.type";
declare class Point {
    x: number;
    y: number;
    constructor(x: number, y: number);
}
declare class Size {
    width: number;
    height: number;
    constructor(width: number, height: number);
}
declare class Rect {
    x: number;
    y: number;
    width: number;
    height: number;
    constructor(x: number, y: number, width: number, height: number);
}
declare const swapSizeDimensions: (size: Size) => Size;
declare const makeChildlessRect: (params: RectType) => Rect;
declare const computeCenterGeometry: (params: Exclude<GeometryType, "arrowSize" | "childContentSpacing">) => {
    tooltipOrigin: Point;
    anchorPoint: Point;
    placement: string;
    adjustedContentSize: Size;
};
declare const computeTopGeometry: (params: GeometryType) => {
    tooltipOrigin: Point;
    anchorPoint: Point;
    placement: string;
    adjustedContentSize: Size;
};
declare const computeBottomGeometry: (params: GeometryType) => {
    tooltipOrigin: Point;
    anchorPoint: Point;
    placement: string;
    adjustedContentSize: Size;
};
declare const computeLeftGeometry: (params: GeometryType) => {
    tooltipOrigin: Point;
    anchorPoint: Point;
    placement: string;
    adjustedContentSize: Size;
};
declare const computeRightGeometry: (params: GeometryType) => {
    tooltipOrigin: Point;
    anchorPoint: Point;
    placement: string;
    adjustedContentSize: Size;
};
export { Point, Size, Rect, swapSizeDimensions, makeChildlessRect, computeCenterGeometry, computeTopGeometry, computeBottomGeometry, computeLeftGeometry, computeRightGeometry, };
